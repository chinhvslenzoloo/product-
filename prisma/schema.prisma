// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  name      String
  email     String @unique
  password  String
  phone     String? @unique
  carts     Cart[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  products  Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  price       Float
  color       String   @default("#FFFFFF")
  stock       Int      @default(0)
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
  images      Image[]
  cartItems   CartItem[] // Relation to CartItem
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Image {
  id        Int    @id @default(autoincrement())
  imageURL  String @db.VarChar(255)
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
}

model Cart {
  id      Int         @id @default(autoincrement())
  userId  Int
  user    User        @relation(fields: [userId], references: [id])
  cartItems CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  cartId    Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  quantity  Int
  @@index([cartId, productId])  
}
